#!/usr/bin/python

import codecs
import sqlite3
import sys

from sqlite3 import OperationalError

################################################################################
# sqlite3-execute
# execute all commands inside a given .sql file and construct an sqlite3
# database file from it
################################################################################

def executeSql(filename):
    # Open and read the file as a single buffer
    fd = codecs.open(filename, 'r','utf-8')
    sqlFile = fd.read()
    fd.close()

    # all SQL commands (split on ';')
    sqlCommands = sqlFile.split(';')

    # Execute every command from the input file
    for command in sqlCommands:
        # This will skip and report errors
        # For example, if the tables do not yet exist, this will skip over
        # the DROP TABLE commands
        try:
            c.execute(command)
        except OperationalError, msg:
            print "Invalid command skipped: ", msg

if len(sys.argv) < 3:
    print "Usage: " + sys.argv[0] + " <dbfile> <sqlfile> "
    sys.exit(-1)

dbfile = sys.argv[1]
sqlfile = sys.argv[2]

db = sqlite3.connect(dbfile)
db.text_factory = str
c = db.cursor()

executeSql(sqlfile)

db.commit()

c.close()
db.close()

